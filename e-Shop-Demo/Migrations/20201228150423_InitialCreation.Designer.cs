// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using e_Shop_Demo.Entities;

namespace e_Shop_Demo.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20201228150423_InitialCreation")]
    partial class InitialCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("e_Shop_Demo.Entities.Customer", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Activate")
                        .HasColumnType("bit");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            ID = new Guid("8dd56f23-ea02-43c8-835a-369efd4c44bf"),
                            Account = "jackson@example.com",
                            Activate = true,
                            BirthDate = new DateTime(1985, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "/ohjrsvt7bACcAHjb+29hGG7EbXZ1QErLxXHXZMQrPQ=",
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("c8fbcabd-3d47-439c-a9e2-47a09f0f8d75"),
                            Account = "jdsaon@example.com",
                            Activate = true,
                            BirthDate = new DateTime(1994, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "/ohjrsvt7bACcAHjb+29hGG7EbXZ1QErLxXHXZMQrPQ=",
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("392bdc2c-043c-4df0-afc6-667b46208c2f"),
                            Account = "jdsao123n@example.com",
                            Activate = true,
                            BirthDate = new DateTime(1995, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "/ohjrsvt7bACcAHjb+29hGG7EbXZ1QErLxXHXZMQrPQ=",
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("df5c71b1-3802-4057-8927-3c28272b70ce"),
                            Account = "jdsao123n@example.com",
                            Activate = true,
                            BirthDate = new DateTime(1977, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "/ohjrsvt7bACcAHjb+29hGG7EbXZ1QErLxXHXZMQrPQ=",
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("0226eaae-6d0b-4c59-980d-32f654d8adcb"),
                            Account = "s4d5623n@example.com",
                            Activate = true,
                            BirthDate = new DateTime(1965, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "/ohjrsvt7bACcAHjb+29hGG7EbXZ1QErLxXHXZMQrPQ=",
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("0ca8a9c7-faa4-42db-94d7-3237f2f71091"),
                            Account = "fsado123n@example.com",
                            Activate = true,
                            BirthDate = new DateTime(1952, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "/ohjrsvt7bACcAHjb+29hGG7EbXZ1QErLxXHXZMQrPQ=",
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("7a4316b1-abbc-44a2-89e6-71601e895f67"),
                            Account = "gds45dn@example.com",
                            Activate = true,
                            BirthDate = new DateTime(1966, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "/ohjrsvt7bACcAHjb+29hGG7EbXZ1QErLxXHXZMQrPQ=",
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("d81a36f0-b13e-4c08-8e13-1327bf34ea2f"),
                            Account = "dsad4923n@example.com",
                            Activate = true,
                            BirthDate = new DateTime(2000, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "/ohjrsvt7bACcAHjb+29hGG7EbXZ1QErLxXHXZMQrPQ=",
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("f909c51a-042f-40f1-9749-c7e83bf4a3a6"),
                            Account = "s46asdn@example.com",
                            Activate = true,
                            BirthDate = new DateTime(1989, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "/ohjrsvt7bACcAHjb+29hGG7EbXZ1QErLxXHXZMQrPQ=",
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("e_Shop_Demo.Entities.Employee", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Activate")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = new Guid("ca5b8afd-05e9-4b1c-a9d6-06a4cd5143ac"),
                            Account = "admin123@example.com",
                            Activate = true,
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "UzsxuAjbsHNCXl8C/d2jNWFZ/WvEoOoXMpvXdydnpRQ=",
                            Role = 0,
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("22310594-a2da-4ec6-9979-95ef65d7d9c9"),
                            Account = "manager123@example.com",
                            Activate = true,
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "UzsxuAjbsHNCXl8C/d2jNWFZ/WvEoOoXMpvXdydnpRQ=",
                            Role = 1,
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("9fe339d1-9da1-4a53-b26f-91724fcb1d08"),
                            Account = "general123@example.com",
                            Activate = true,
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "UzsxuAjbsHNCXl8C/d2jNWFZ/WvEoOoXMpvXdydnpRQ=",
                            Role = 2,
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("bb18c2eb-3450-4f67-a3b5-ed2870c89d54"),
                            Account = "general456@example.com",
                            Activate = true,
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "UzsxuAjbsHNCXl8C/d2jNWFZ/WvEoOoXMpvXdydnpRQ=",
                            Role = 2,
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("51af0c49-38b0-4e44-b140-e8340bd15a0b"),
                            Account = "gene45656@example.com",
                            Activate = true,
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "UzsxuAjbsHNCXl8C/d2jNWFZ/WvEoOoXMpvXdydnpRQ=",
                            Role = 0,
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("10c8c9dd-f77a-4462-934c-0e6fec693f92"),
                            Account = "gendsa456@example.com",
                            Activate = true,
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "UzsxuAjbsHNCXl8C/d2jNWFZ/WvEoOoXMpvXdydnpRQ=",
                            Role = 1,
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("0266d670-8b08-40a9-ae92-65756c156185"),
                            Account = "gsad5456@example.com",
                            Activate = true,
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "UzsxuAjbsHNCXl8C/d2jNWFZ/WvEoOoXMpvXdydnpRQ=",
                            Role = 0,
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("ae38e44f-5b4b-419e-aca0-5e280aac0eff"),
                            Account = "gs49456@example.com",
                            Activate = true,
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "UzsxuAjbsHNCXl8C/d2jNWFZ/WvEoOoXMpvXdydnpRQ=",
                            Role = 1,
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("915fdf68-9fc3-447d-871b-52f5a871c72f"),
                            Account = "gsaasd55456@example.com",
                            Activate = true,
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "UzsxuAjbsHNCXl8C/d2jNWFZ/WvEoOoXMpvXdydnpRQ=",
                            Role = 2,
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("74062f3e-1b8b-4988-99a8-6c7aec4b195f"),
                            Account = "saad5456@example.com",
                            Activate = true,
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "UzsxuAjbsHNCXl8C/d2jNWFZ/WvEoOoXMpvXdydnpRQ=",
                            Role = 0,
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("066ec126-6a28-4e5f-9eb6-e95b574eb9c7"),
                            Account = "gsas8d46@example.com",
                            Activate = true,
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "UzsxuAjbsHNCXl8C/d2jNWFZ/WvEoOoXMpvXdydnpRQ=",
                            Role = 1,
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("8e65a9ea-5c5d-4de6-b7cf-1910fbc49575"),
                            Account = "gsasdad46@example.com",
                            Activate = true,
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "UzsxuAjbsHNCXl8C/d2jNWFZ/WvEoOoXMpvXdydnpRQ=",
                            Role = 1,
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("b1d59fd1-b027-44af-a397-ebc10accf67f"),
                            Account = "a22s8d46@example.com",
                            Activate = true,
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Password = "UzsxuAjbsHNCXl8C/d2jNWFZ/WvEoOoXMpvXdydnpRQ=",
                            Role = 1,
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("e_Shop_Demo.Entities.ImportRecord", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("ImportPrice")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("SupplierID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("ImportRecord");

                    b.HasData(
                        new
                        {
                            ID = new Guid("c860218d-774e-41bd-ac53-56c32cee0cf7"),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            ImportPrice = 20.0,
                            ProductID = new Guid("98d1a3c7-b440-4a25-b8d6-a3872394fc34"),
                            Quantity = 100,
                            Status = 1,
                            SupplierID = new Guid("5b733ea1-af3c-49f3-8a06-7074b5999296")
                        },
                        new
                        {
                            ID = new Guid("bebad55b-c577-4921-8e1e-8520d9ba53b2"),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            ImportPrice = 5000.0,
                            ProductID = new Guid("22b6222f-cd49-46b4-a5de-2e08cfdf5697"),
                            Quantity = 20,
                            Status = 1,
                            SupplierID = new Guid("eb04df6c-50da-430b-8660-16eba3399c0f")
                        },
                        new
                        {
                            ID = new Guid("5075a558-0e10-426d-9a36-35ab8b137820"),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            ImportPrice = 600.0,
                            ProductID = new Guid("435948e9-1d67-4757-86e9-fe97d48894b5"),
                            Quantity = 30,
                            Status = 1,
                            SupplierID = new Guid("e2f50571-dab4-4c65-b2da-b0fb70accbfc")
                        });
                });

            modelBuilder.Entity("e_Shop_Demo.Entities.Product", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("Type")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ID = new Guid("98d1a3c7-b440-4a25-b8d6-a3872394fc34"),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Description = "風靡全球No.1洋芋片品牌, 香甜馬鈴薯精製成片, 使用剛剛好的鹽提味，簡單清爽",
                            Name = "洋芋片",
                            PictureLink = "https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/Potato-Chips.jpg/640px-Potato-Chips.jpg",
                            Price = 30.0,
                            Quantity = 100,
                            Type = new Guid("c4a7cd61-f4e3-4ce9-b56b-55cf0608288f"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("22b6222f-cd49-46b4-a5de-2e08cfdf5697"),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Description = "從夜生活到風景照，都能拍得出色； W810 具備可讓您輕鬆拍出清晰精彩相片與 HD 影片的多項功能。6x 光學變焦可讓您拍出細節豐富的特寫相片，派對模式則可讓您輕鬆捕捉精彩夜生活。",
                            Name = "相機",
                            PictureLink = "https://s.yimg.com/zp/images/F84200C57BFF5B8FB763B09688523E28F99D17E3",
                            Price = 9999.0,
                            Quantity = 20,
                            Type = new Guid("4733c6cd-1b16-40ba-a0f7-11e8b4f14201"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("435948e9-1d67-4757-86e9-fe97d48894b5"),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Description = "高滲透奈米水離子水分產量提升1800%;礦物負離子出口角度改變效果更集中",
                            Name = "吹風機",
                            PictureLink = "https://johnlewis.scene7.com/is/image/JohnLewis/237876949",
                            Price = 999.0,
                            Quantity = 30,
                            Type = new Guid("9c27e7ab-fd09-4057-afa6-3bd589a7856b"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("e_Shop_Demo.Entities.ProductType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ProductType");

                    b.HasData(
                        new
                        {
                            ID = new Guid("c4a7cd61-f4e3-4ce9-b56b-55cf0608288f"),
                            Name = "Food",
                            Order = 1
                        },
                        new
                        {
                            ID = new Guid("4733c6cd-1b16-40ba-a0f7-11e8b4f14201"),
                            Name = "Electronic",
                            Order = 2
                        },
                        new
                        {
                            ID = new Guid("9c27e7ab-fd09-4057-afa6-3bd589a7856b"),
                            Name = "Home_Appliances",
                            Order = 3
                        });
                });

            modelBuilder.Entity("e_Shop_Demo.Entities.PurchaseDetailRecord", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CurrentPrice")
                        .HasColumnType("float");

                    b.Property<Guid?>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PurchaseRecordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("PurchaseDetailRecord");

                    b.HasData(
                        new
                        {
                            ID = new Guid("7823b830-e85b-4cd2-bd2d-ad8dc128bd42"),
                            CurrentPrice = 30.0,
                            ProductID = new Guid("98d1a3c7-b440-4a25-b8d6-a3872394fc34"),
                            PurchaseRecordId = new Guid("37be978c-76c8-469f-8db0-41141e017622"),
                            Quantity = 5
                        },
                        new
                        {
                            ID = new Guid("d0cb6c37-fcb3-409b-bf50-3f7a1008b0f5"),
                            CurrentPrice = 9999.0,
                            ProductID = new Guid("22b6222f-cd49-46b4-a5de-2e08cfdf5697"),
                            PurchaseRecordId = new Guid("37be978c-76c8-469f-8db0-41141e017622"),
                            Quantity = 1
                        },
                        new
                        {
                            ID = new Guid("95d51292-fbbe-4fe5-8c19-2478fd87ca7b"),
                            CurrentPrice = 999.0,
                            ProductID = new Guid("435948e9-1d67-4757-86e9-fe97d48894b5"),
                            PurchaseRecordId = new Guid("37be978c-76c8-469f-8db0-41141e017622"),
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("e_Shop_Demo.Entities.PurchaseRecord", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("PurchaseRecord");

                    b.HasData(
                        new
                        {
                            ID = new Guid("37be978c-76c8-469f-8db0-41141e017622"),
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerID = new Guid("8dd56f23-ea02-43c8-835a-369efd4c44bf"),
                            PurchaseDate = new DateTime(2020, 12, 16, 15, 12, 30, 0, DateTimeKind.Unspecified),
                            Total = 0.0
                        });
                });

            modelBuilder.Entity("e_Shop_Demo.Entities.Supplier", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductType")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Supplier");

                    b.HasData(
                        new
                        {
                            ID = new Guid("5b733ea1-af3c-49f3-8a06-7074b5999296"),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Email = "abcmanu@gmail.com",
                            Name = "食品製造商A",
                            Phone = "0956123845",
                            ProductType = new Guid("c4a7cd61-f4e3-4ce9-b56b-55cf0608288f"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("eb04df6c-50da-430b-8660-16eba3399c0f"),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Email = "abcemanu@gmail.com",
                            Name = "3C製造商A",
                            Phone = "0954778943",
                            ProductType = new Guid("4733c6cd-1b16-40ba-a0f7-11e8b4f14201"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("e2f50571-dab4-4c65-b2da-b0fb70accbfc"),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Email = "dbcmanu@gmail.com",
                            Name = "家電製造商A",
                            Phone = "0989543147",
                            ProductType = new Guid("9c27e7ab-fd09-4057-afa6-3bd589a7856b"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("7c82b7e0-b56f-4e1c-916f-bfc9e155d78b"),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Email = "sabcmanu@gmail.com",
                            Name = "食品製造商C",
                            Phone = "0956185845",
                            ProductType = new Guid("c4a7cd61-f4e3-4ce9-b56b-55cf0608288f"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("1ba747a1-ad15-41a6-a9b0-ec153ed1ca75"),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Email = "ssaabcemanu@gmail.com",
                            Name = "3C製造商DDD",
                            Phone = "0974778943",
                            ProductType = new Guid("4733c6cd-1b16-40ba-a0f7-11e8b4f14201"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("208f4e1a-9d60-4a3e-a0d6-6f411592d87c"),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Email = "aasdbcmanu@gmail.com",
                            Name = "家電製造商SDDDA",
                            Phone = "0989546547",
                            ProductType = new Guid("9c27e7ab-fd09-4057-afa6-3bd589a7856b"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("d84d19ae-b5fb-4d18-919b-b9ca8645def3"),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Email = "sadabcmanu@gmail.com",
                            Name = "食品製造商CCC",
                            Phone = "0912123845",
                            ProductType = new Guid("c4a7cd61-f4e3-4ce9-b56b-55cf0608288f"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("e471cfa3-8c5d-4976-9d26-9333ef989714"),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Email = "as432bcemanu@gmail.com",
                            Name = "3C製造商ASDW",
                            Phone = "0958578943",
                            ProductType = new Guid("4733c6cd-1b16-40ba-a0f7-11e8b4f14201"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("a21bff09-3d54-4956-abb3-c70aa1983908"),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Email = "dbc876manu@gmail.com",
                            Name = "家電製造商SSA",
                            Phone = "0989373147",
                            ProductType = new Guid("9c27e7ab-fd09-4057-afa6-3bd589a7856b"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("75d50638-9d64-4bbf-ae55-ea8c72cbff4c"),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Email = "as542bcmanu@gmail.com",
                            Name = "食品製造商SQA",
                            Phone = "0955823845",
                            ProductType = new Guid("c4a7cd61-f4e3-4ce9-b56b-55cf0608288f"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("63871d42-a1b1-477d-a9fb-fe8624e874a0"),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Email = "ab542cemanu@gmail.com",
                            Name = "3C製造商FSDA",
                            Phone = "0954688943",
                            ProductType = new Guid("4733c6cd-1b16-40ba-a0f7-11e8b4f14201"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = new Guid("fa6e8aa0-2b9b-4038-b72b-93b21f9110be"),
                            CreateTime = new DateTime(2020, 12, 16, 13, 12, 30, 0, DateTimeKind.Unspecified),
                            Email = "dbc572manu@gmail.com",
                            Name = "家電製造商QADA",
                            Phone = "0986983147",
                            ProductType = new Guid("9c27e7ab-fd09-4057-afa6-3bd589a7856b"),
                            UpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("e_Shop_Demo.Entities.PurchaseDetailRecord", b =>
                {
                    b.HasOne("e_Shop_Demo.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");
                });
#pragma warning restore 612, 618
        }
    }
}
